name: 'Easy Docker - install, login, build, mutiplatform, push, minimal configuration'
description: 'easy to use, configless action to install docker, build and push multiplatform images to ghcr.io'

inputs:
  shell:
    description: The shell to run the build-script with.
    required: false
    default: bash
  platforms:
    description: comma separated list of platforms to build docker image for. For example "linux/amd64,linux/arm/v6,linux/arm/v7"
    required: false
    default: linux/amd64
  buildx_config_inline:
    description: inline config file for buildx, see https://github.com/moby/buildkit/blob/master/docs/buildkitd.toml.md
    required: false
    default: ""
  ghcr_password:
    description: password for Github Container Registry. Regular secrets.GITHUB_TOKEN is used.

runs:
  using: "composite"
  steps:
    - name: Checkout repository and submodules
      uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
      with:
        config-inline:  ${{ inputs.buildx_config_inline }}
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ inputs.ghcr_password }}
    - name: Set up QEMU
      if: ${{ inputs.platforms != 'linux/amd64' }}
      uses: docker/setup-qemu-action@v2
    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ${{ format('ghcr.io/{0}', github.repository) }}
        tags: |
          type=semver,pattern=v{{major}}
          type=semver,pattern=v{{major}}.{{minor}}
          type=sha,enable=true,prefix=sha-,format=short
          type=ref,event=branch
          type=ref,event=tag
    - name: Build and push
      uses: docker/build-push-action@v3
      with:
        context: .
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}}
        platforms: ${{ inputs.platforms }}
